DesignatorStatement := Designator "=" Expr.
DesignatorStatement := "[" [Designator] {"," [Designator]}"]" "=" Designator.
DesignatorStatement := Designator "++".
DesignatorStatement := Designator "--".
Statement := DesignatorStatement ";".
Statement := "read" "(" Designator ")" ";".
Statement := "print" "(" Expr [“,” numConst] ")" ";".
Expr := ["‐"] Term {Addop Term}.
Term := Factor {Mulop Factor}.
Factor := numConst | charConst | "(" Expr ")" | boolConst | "new" Type "[" Expr "]"| Designator.
Designator := ident [ "[" Expr "]" ].
Addop := "+" | "‐" .
Mulop := "*" | "/" | "%".
Factor: = "new" Type "[" Expr "]" "[" Expr "]".
VarDecl: = Type ident ["[" "]" ["[" "]"]] {"," ident ["[" "]" ["[" "]"]]} ";".
FormPars = Type ident ["[" "]" ["[" "]"]] {"," Type ident ["[" "]" ["[" "]"]]}.